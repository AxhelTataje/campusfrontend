buildscript {
	ext {
		springBootVersion = '1.3.5.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") 
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'



jar {
	baseName = 'campus'
	version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()

}



dependencies {
	// spring
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-thymeleaf')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.hateoas:spring-hateoas:0.19.0.RELEASE')
	compile('org.thymeleaf:thymeleaf:3.0.0.BETA03')
	compile('org.thymeleaf:thymeleaf-spring4:3.0.0.BETA03')
	compile('com.google.guava:guava:19.0')

	compile('org.springframework.cloud:spring-cloud-starter-config:1.0.3.RELEASE')

	// poi
	compile('org.apache.poi:poi-ooxml:3.10.1')

	//Fake for spring security requirements
	compile('org.springframework:spring-jdbc')

	// google gson
	compile('com.google.code.gson:gson:2.6.2')

	compile('org.webjars:bootstrap:3.3.4')
	compile('org.webjars:jquery:2.1.4')

	// testing
	testCompile('org.springframework.boot:spring-boot-starter-test')
}




eclipse {
	classpath {
		 containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		 containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
	}
}


task wrapper(type: Wrapper) {
	gradleVersion = '2.12'
}

bootRun {
	addResources = true
}






